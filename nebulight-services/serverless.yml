org: vitkon
app: nebulight
service: serverless-fastapi
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  region: eu-west-2
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    SUPABASE_URL: ${env:SUPABASE_URL}
    SUPABASE_KEY: ${env:SUPABASE_KEY}
    S3_DATA_BUCKET: ${self:custom.s3Bucket}
    S3_DATA_BUCKET_RESULTS: ${self:custom.s3BucketResults}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::${self:custom.s3Bucket}"
            - "arn:aws:s3:::${self:custom.s3Bucket}/*"
        - Effect: "Allow"
          Action:
            - "glue:CreateCrawler"
            - "glue:StartCrawler"
          Resource: "*"
functions:
  scheduledTask:
    handler: src/scheduled_task.scheduled_task_handler
    timeout: 900
    events:
      - schedule:
          name: every-day-event
          description: Trigger every day
          rate: cron(0 0 * * ? *)
  api:
    handler: src/main.handler
    events:
      - httpApi: "*"

useDotenv: true
plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    strip: false
    noDeploy: ["boto3", "botocore"]

  s3Bucket: nebulight-data
  s3BucketResults: nebulight-data-query-results

resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
    GlueCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        Role:
          Fn::GetAtt:
            - GlueCrawlerRole
            - Arn
        DatabaseName: nebulight_database
        Targets:
          S3Targets:
            - Path: s3://${self:custom.s3Bucket}/
        Schedule:
          ScheduleExpression: cron(0 3 * * ? *)
    GlueCrawlerRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: "glue.amazonaws.com"
              Action: "sts:AssumeRole"
        Policies:
          - PolicyName: GlueCrawlerPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:GetObject"
                    - "s3:ListBucket"
                  Resource:
                    - "arn:aws:s3:::${self:custom.s3Bucket}"
                    - "arn:aws:s3:::${self:custom.s3Bucket}/*"
                - Effect: "Allow"
                  Action:
                    - "glue:GetDatabases"
                    - "glue:GetDatabase"
                    - "glue:CreateDatabase"
                    - "glue:UpdateDatabase"
                    - "glue:DeleteDatabase"
                    - "glue:GetTables"
                    - "glue:GetTable"
                    - "glue:CreateTable"
                    - "glue:UpdateTable"
                    - "glue:DeleteTable"
                    - "glue:BatchDeleteTable"
                    - "glue:CreatePartition"
                    - "glue:BatchCreatePartition"
                    - "glue:DeletePartition"
                    - "glue:BatchDeletePartition"
                    - "glue:GetPartitions"
                    - "glue:BatchGetPartition"
                    - "glue:UpdatePartition"
                  Resource: "*"
    AthenaWorkGroup:
      Type: AWS::Athena::WorkGroup
      Properties:
        Name: nebulight-workgroup
        Description: Workgroup for nebulight application
        WorkGroupConfiguration:
          ResultConfiguration:
            OutputLocation: s3://${self:custom.s3BucketResults}/
